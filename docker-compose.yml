services:
  backend:
    container_name: nestjs_backend
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    ports:
      - '3001:3001'
    environment:
      - PORT=3001
      - NODE_ENV=production
      - JWT_SECRET=ABCSDKFAJ1232DSAFI1323AD123ADAD
      - COOKIE_SECRET=asdfsadfkLDKJFKD1233ijfL:KDFJSLJKjnvmdkjshfh
      # Database environment
      - DATABASE_HOST=mysql_db # ✅ ใช้ container name แทน localhost
      - DATABASE_PORT=3306
      - DATABASE_USER=user123
      - DATABASE_PASSWORD=pass123
      - DATABASE_NAME=mydatabase
      # Init Admin
      - DEFAULT_ADMIN_NAME=Super Admin
      - DEFAULT_ADMIN_EMAIL=admin@2ksljasdDKJKIsdfHe.com
      - DEFAULT_ADMIN_PASSWORD=AdminxIokplDsCpwc@i4591glGipsDL123ldSDKf
    depends_on:
      mysql_db:
        # Wait for mysql_db to be ready
        condition: service_healthy
    restart: always
    networks:
      - app_network

  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
      - MYSQL_DATABASE=mydatabase
      - MYSQL_USER=user123
      - MYSQL_PASSWORD=pass123
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - app_network
    healthcheck: # ✅ เพิ่ม healthcheck ให้ MySQL
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s # ✅ เช็คทุก 10 วินาที
      timeout: 5s # ✅ ถ้าไม่มีการตอบสนองภายใน 5 วินาที ถือว่า Fail
      retries: 3 # ✅ ลองใหม่ 3 ครั้งก่อนถือว่า Fail
      start_period: 40s # ✅ ให้เวลารอ MySQL เริ่มต้น 30 วินาที

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    depends_on:
      - mysql_db
    ports:
      - '8080:80' # Exposes phpMyAdmin on localhost:8080
    environment:
      PMA_HOST: mysql_db
      PMA_USER: user123
      PMA_PASSWORD: pass123
      MYSQL_ROOT_PASSWORD: pass123
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
# docker-compose up --build -d backend
# docker-compose up --build -d mysql_db
# docker-compose up --build -d phpmyadmin
# docker-compose down
